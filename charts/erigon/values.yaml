# Default values for erigon.
# This is a YAML-formatted file.

nameOverride: ""
fullnameOverride: ""

image:
  # -- Image for Erigon
  repository: thorax/erigon
  pullPolicy: IfNotPresent
  # -- Overrides the image tag
  # @default -- Chart.appVersion
  tag: ""

# -- Pull secrets required to fetch the Image
imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

prometheus:
  # -- Enable monitoring by creating PodMonitor CRDs
  podMonitors: false
  # alertingRukes: true # TODO

grafana:
  # -- Enable creation of Grafana dashboards. [Grafana chart](https://github.com/grafana/helm-charts/tree/main/charts/grafana#grafana-helm-chart) must be configured to search this namespace, see `sidecar.dashboards.searchNamespace`
  dashboards: false
  # -- Must match `sidecar.dashboards.label` value for the [Grafana chart](https://github.com/grafana/helm-charts/tree/main/charts/grafana#grafana-helm-chart)
  dashboardsConfigMapLabel: grafana_dashboard
  # -- Must match `sidecar.dashboards.labelValue` value for the [Grafana chart](https://github.com/grafana/helm-charts/tree/main/charts/grafana#grafana-helm-chart)
  dashboardsConfigMapLabelValue: ""

statefulNode:
  # -- Additional CLI arguments to pass to `erigon`
  extraArgs: []
    # - "--prune=" # disables all pruning
    # - "--metrics.expensive"
    # - "--chain=bsc"
    # - "--staticpeers=value"
    # - "--private.api.ratelimit=31872" #Â default

  sidecarRpc:
    # -- Enables a high-performance sidecar rpcdaemon container inside the Erigon pod
    enabled: true
    # -- Additional CLI arguments to pass to `rpcdaemon`
    extraArgs:
      - "--http.api=eth,debug,net,trace"
      - "--trace.maxtraces=10000" # optional
      # - "--http.vhosts=*" # optional
      # - "--http.corsdomain=*" # optional
      # - "--ws" # enable ws for dshackle
      # - "--rpc.batch.concurrency=4" # default 2

  # TODO examples for:
  # - hostPath
  # - regular cloud NAS mount
  # - s3 mount? better at application layer? yes?
  # - openebs volume
  # - tmpfs

  # -- PersistentVolumeClaimSpec for Erigon storage, see https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#persistentvolumeclaimspec-v1-core
  volumeClaimSpec:
    accessModes: ["ReadWriteOnce"]
    storageClassName: "default"
    resources:
      requests:
        # -- The amount of disk space to provision for Erigon
        storage: 1024Gi

  # Increasing the grace termination period prevents Kubernetes
  # from killing the node process prematurely, which can lead
  # to data integrity issues
  # -- Amount of time to wait before force-killing the Erigon process
  terminationGracePeriodSeconds: 300

  # -- Annotations to attach to the Pod
  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  # TODO MOVE THIS INTO DEFS?
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    readOnlyRootFilesystem: true
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true

  service:
    type: ClusterIP
    ports:
      # Valid keys are names of ports that are exposed by the Pod that (see templates/stateful-node/statefulset.yaml)
      # -- Service Port to expose Erigon GRPC interface on
      grpc-erigon: 9090
      # -- Service Port to expose sidecar rpcdaemon JSON-RPC interface on (if enabled)
      http-jsonrpc: 8545 # Provided by sidecar rpcdaemon, if enabled

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    #   ephemeral-storage: 100Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    #   ephemeral-storage: 100Mi

  nodeSelector: {}

  tolerations: []

  affinityPresets:
    # -- Configure anti-affinity rules to prevent multiple Erigon instances on the same host
    antiAffinityByHostname: true

  affinity: {}

rpcDaemons:
  # -- Enable a Deployment of rpcdaemons that can be scaled independently
  enabled: false
  # -- Number of rpcdaemons to run
  replicaCount: 1

  # -- Additional CLI arguments to pass to `rpcdaemon`
  extraArgs: []
    # - "--state.cache=2000000" # default 1000000, only makes sense for rpcdaemon without --datadir

  autoscaling:
    # -- Enable auto-scaling of the rpcdaemons Deployment
    enabled: false
    # -- Minimum number of replicas
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage:
    targetMemoryUtilizationPercentage:
  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    readOnlyRootFilesystem: true
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    ports:
      # Valid keys are names of ports that are exposed by the Pod (see templates/rpcdaemons/deployment.yaml)
      # -- Service Port to expose rpcdaemons JSON-RPC interface on
      http-jsonrpc: 8545

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    #   ephemeral-storage: 100Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    #   ephemeral-storage: 100Mi

  nodeSelector: {}

  tolerations: []

  affinityPresets:
    # -- Configure anti-affinity rules to prevent multiple Erigon instances on the same host
    antiAffinityByHostname: true

  affinity: {}